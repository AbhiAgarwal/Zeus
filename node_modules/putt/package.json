{
  "author": {
    "name": "Peter Graham"
  },
  "name": "putt",
  "description": "easily output text in lots of fun ways (speech, growl, email, ...)",
  "keywords": [
    "output",
    "notify",
    "notification"
  ],
  "version": "0.0.6",
  "homepage": "https://github.com/6/putt",
  "repository": {
    "type": "git",
    "url": "git://github.com/6/putt.git"
  },
  "bugs": {
    "url": "https://github.com/6/putt/issues"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "dependencies": {
    "coffee-script": "1.1.3",
    "say": "0.5.0",
    "growl": "1.2.0",
    "nodemailer": "0.2.4",
    "restler": "0.2.2",
    "ntwitter": "0.2.9-2",
    "xml2js": "0.1.12"
  },
  "devDependencies": {
    "express": "2.5.1"
  },
  "directories": {
    "lib": "./lib"
  },
  "main": "./index",
  "readme": "**putt** is a node.js module that lets you easily output text in lots of fun ways. It wraps a bunch of other libraries to make this as simple as possible.\n\n```javascript\nvar putt = require(\"putt\");\nputt().speak(\"This is spoken aloud by your computer\");\nputt().desktop_notify(\"This appears as a desktop notification\");\n```\n\nSupported output formats:\n\n* Speech synthesizer (by [say.js](https://github.com/Marak/say.js))\n* Desktop notification (by [node-growl](https://github.com/visionmedia/node-growl))\n* POST request (by [restler](https://github.com/danwrong/restler))\n* Email (by [nodemailer](https://github.com/andris9/nodemailer))\n* Tweet (by [ntwitter](https://github.com/AvianFlu/ntwitter))\n* More coming soon... (SMS/call - twilio API, ???)\n\n# Install\n\nFirst, install [Node.JS](http://nodejs.org/) and [NPM](http://npmjs.org/). Then, `cd` into your project folder and run:\n\n    npm install putt\n\nFor `speak` to work on Linux, install [Festival](http://www.cstr.ed.ac.uk/projects/festival/) and see what voices you have available (e.g. `voice_rab_diphone`).\n\nFor `desktop_notify` to work, install:\n\n* Mac: [growl](http://code.google.com/p/growl/downloads/list), including the `growlnotify` extra\n* Linux: `notify-send` with `sudo apt-get install libnotify-bin` or equivalent\n\n# Usage\n\nAll output types take an options hash (optional), e.g.:\n\n```javascript\nputt().speak(\"I am talking\", {voice: \"Bruce\"});\n```\n\nAll output types also have two optional callbacks that can be chained:\n\n* `done()` is called when the output finishes outputting\n* `error(reason)` is called when an error is encountered during output\n\nFor example:\n\n```javascript\nputt().speak(\"I am talking\").done(function() {\n    console.log(\"Finished talking\");\n}).error(function(reason) {\n    console.log(\"Something went wrong:\", reason);\n});\n```\n\nNote that you can chain these method calls in any order:\n\n```javascript\nputt().done(function() {\n    console.log(\"Finished talking\");\n}).speak(\"I am talking\");\n```\n\n## Speech\n\n```javascript\nputt().speak(\"This is spoken\");\n```\n    \nOptions:\n\n* `voice` the voice to use when speaking.\n\n[See say.js docs](https://github.com/Marak/say.js) for a full list of voices\n\n## Desktop notification\n\n```javascript\nputt().desktop_notify(\"This is a desktop notification\");\n```\n\nOptions:\n\n* `title` the title of the notification window\n* `name` the name of the application\n* `priority` (integer) the priority of the notification (default is 0)\n* `sticky` (boolean) if notification should fade away or not\n* `image` custom image to show along with notification\n\n[See node-growl docs](https://github.com/visionmedia/node-growl) for more details\n\n## POST request\n\n```javascript\nputt().post({param1: \"value1\", param2: \"value2\"}, {url: 'http://example.com/whatever'});\n```\n\nOptions:\n\n* `url` (required) the URL to POST to\n* `headers` a hash of HTTP headers to be sent\n\n[See restler docs](https://github.com/danwrong/restler) for more details\n\n## Email\n\nBy default, email assumes that the sender is a Gmail user.\n\n```javascript\nputt({\n    user: 'sender@gmail.com',\n    pass: 'sender_password'\n}).email(\"Body of email\", {to: 'recipient@example.com', subject: 'yo'});\n```\n\nOptions:\n\n* `to` (required) the recipient email address\n* `subject` the subject for the email\n* `host` the SMTP host\n* `port` (integer) the SMTP port\n* `ssl` (boolean) whether or not to use SSL\n\n[See nodemailer docs](https://github.com/andris9/nodemailer) for more details\n\n## Tweet\n\nFirst, [create a new Twitter application](https://dev.twitter.com/apps/new), and under the \"Settings\" tab, you will also want to give your app \"Read and write\" permissions so that we can write a tweet. Then, click the button at the bottom of the \"Details\" tab to generate an access token and secret.\n\nNext, provide those keys and secrets to putt when you call it:\n\n```javascript\nputt({\n    consumer_key: \"your consumer key\",\n    consumer_secret: \"your consumer secret\",\n    access_token: \"your access token\",\n    access_token_secret: \"your access token secret\"\n}).tweet(\"This text will be tweeted by your account\");\n```\n",
  "readmeFilename": "README.md",
  "_id": "putt@0.0.6",
  "dist": {
    "shasum": "d7f89727554f18c473e182d01b419b6b21930386"
  },
  "_from": "putt"
}
